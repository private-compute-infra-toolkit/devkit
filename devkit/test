#!/bin/bash
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset

DEVKIT="$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &> /dev/null && pwd)"
readonly DEVKIT

readonly SCRIPTS="${DEVKIT}/../scripts"
readonly IMAGES="${DEVKIT}/../images"

source "${SCRIPTS}/lib_logging.sh"

function usage() {
  local -i exitval=${1-1}
  cat &>/dev/stderr << USAGE
usage:
  $0 <options>
    --suffix <string>          image suffix
    -h | --help                show this help message and exit
USAGE
  exit ${exitval}
}

declare SUFFIX=""

while [[ $# -gt 0 ]]; do
  case "$1" in
    --suffix)
      SUFFIX="$2"
      shift 2 || usage
      ;;
    -h | --help) usage 0 ;;
    *)
      printf "unrecognized arg: %s\n" "$1"
      usage
      ;;
  esac
done

declare IMAGE_NAME="build-env"
if [[ -n ${SUFFIX} ]]; then
  IMAGE_NAME+="${SUFFIX}"
fi

BUILD_OUTPUT="$("${DEVKIT}/docker/build.py" "${IMAGE_NAME}" --print-tag --search-path "${IMAGES}")"
readonly BUILD_OUTPUT
BUILD_ENV_IMAGE=$(echo "${BUILD_OUTPUT}" | tail -n 1)
readonly BUILD_ENV_IMAGE

#
# validate the operation of the build* script
#
if "${DEVKIT}/build${SUFFIX}" bash -c "exit 2"; then
  printf "%s failed. Expected non-zero exit\n" "${DEVKIT}/build${SUFFIX}"
  exit 1
fi

"${SCRIPTS}/docker_run" "${BUILD_ENV_IMAGE}" "${SCRIPTS}/test_entrypoint"

# This might fail if Bazel is not installed
"${SCRIPTS}/test_entrypoint" || true
